name: PR Validation Pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and Run Tests
        run: mvn clean install

      - name: Static Code Analysis.
        run: mvn checkstyle:check
        continue-on-error: true

      - name: Build, Test, and SonarCloud Scan
        run: mvn clean verify sonar:sonar \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io

      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env: 
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #    args: >
      #      -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      #      -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}

    #   - name: Run Security Scan
    #     run: |
    #       mvn org.owasp:dependency-check-maven:check -Dformat=ALL
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #   - name: Code Coverage Report
    #     run: mvn jacoco:report
    #     continue-on-error: true 

      - name: Upload unit test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: target/surefire-reports

    #   - name: Publish Code Coverage Report
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: code-coverage-report
    #       path: target/site/jacoco/

#   notify:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Notify Slack of Build Status
#         if: always()
#         uses: 8398a7/action-slack@v3
#         with:
#           status: ${{ job.status }}
#           fields: repo,message,commit,author
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build Docker image
        run: |
          mvn package
          echo "docker image building........."
          docker build -t digitify-application:${{ github.sha }} .
          echo "docker image built successfully"

      - name: Scan Docker Image for Vulnerabilities
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: digitify-application:${{ github.sha }}
          format: 'json'
          output: 'trivy-report.json'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.json
