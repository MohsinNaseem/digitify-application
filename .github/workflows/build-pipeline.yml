name: Java Maven CI/CD Pipeline

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    

jobs:
  unit-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
       
      - name: Run unit tests
        run: mvn test
        
      - name: Upload unit test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: target/surefire-reports

  build-artifact:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate artificat version for tagging
        id: version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build & Push Docker image to ECR
        env:
          ECR_REPOSITORY: "my-app"
          VERSION: ${{ env.VERSION }}
        run: |
          echo "VERSION: $VERSION"
          mvn package
          docker build -t $ECR_REPOSITORY:$VERSION .
          docker run -d -p 8080:8080 $ECR_REPOSITORY:$VERSION
          curl http://localhost:8080
          echo "VERSION: $VERSION"
        #  docker tag $ECR_REPOSITORY:$VERSION ${{ steps.ecr-login.outputs.registry }}/$ECR_REPOSITORY:$VERSION
        # docker push ${{ steps.ecr-login.outputs.registry }}/$ECR_REPOSITORY:${{ steps.version.outputs.VERSION }}

  deploy-artifact:
    runs-on: ubuntu-latest
    needs: build-artifact
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Add steps for deployment
      # Example: Deploying to ECS or another service using the pushed Docker image
      # You may use aws-actions/amazon-ecs-deploy-task-definition@v1 or another deployment action
