name: Java Maven CI/CD Pipeline

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    

jobs:
  # unit-testing:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
        
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
       
  #     - name: Run unit tests
  #       run: mvn test
        
  #     - name: Upload unit test results
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: unit-test-results
  #         path: target/surefire-reports

  build-artifact:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate artificat version for tagging
        id: version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build & Push Docker image to ECR
        env:
          ECR_REPOSITORY: "my-app"
          VERSION: ${{ env.VERSION }}
        run: |
          mvn package
          docker build -t $ECR_REPOSITORY:$VERSION .
          docker tag $ECR_REPOSITORY:$VERSION ${{ steps.ecr-login.outputs.registry }}/$ECR_REPOSITORY:$VERSION
          docker push ${{ steps.ecr-login.outputs.registry }}/$ECR_REPOSITORY:$VERSION

      - name: Export image details
        run: |
         echo "IMAGE_NAME=${{ steps.ecr-login.outputs.registry }}/my-app" >> $GITHUB_ENV
         echo "IMAGE_TAG=${{ env.VERSION }}" >> $GITHUB_ENV

  # deploy-artifact:
  #   runs-on: ubuntu-latest
  #   needs: build-artifact
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}
  #     - name: Set up kubectl
  #       uses: azure/setup-kubectl@v4
  #       with:
  #        version: '4.0.0'

  #     - name: Set up Helm
  #       uses: azure/setup-helm@v4.2.0
  #       with:
  #        version: 'v4.2.0'

  #     - name: Run deploy script
  #       run: |
  #        chmod +x ./deploy.sh
  #        ./deploy.sh


        
      # Add steps for deployment
      # Example: Deploying to ECS or another service using the pushed Docker image
      # You may use aws-actions/amazon-ecs-deploy-task-definition@v1 or another deployment action
